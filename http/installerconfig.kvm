
if [ -e /dev/ada0 ]; then
    GEOM=ada0   # VirtualBox
elif [ -e /dev/da0 ]; then
    GEOM=da0    # Qemu-KVM-Libvirt with virtio-scsi
elif [ -e /dev/vtbd0 ]; then
    GEOM=vtbd0  # vmware/virtualbox
else
    echo "ERROR: There is no disk available for installation" >&2
    exit 1
fi

if [ "$FILESYSTEM" = 'ufs' ]; then
    PARTITIONS="$GEOM"
elif [ "$FILESYSTEM" = 'zfs' ]; then
    export ZFSBOOT_DISKS="$GEOM"
    export ZFSBOOT_VDEV_TYPE=stripe
    # export ZFSBOOT_POOL_CREATE_OPTIONS="-O compress=zstd -O atime=off"
    export nonInteractive="YES"
fi

FETCH_RETRY=5
FETCH_TIMEOUT=30

DISTRIBUTIONS="base.txz kernel.txz lib32.txz src.txz"

#!/bin/sh

# Setup rc.conf location sentinel
if [ "$RC_CONF_FILE" = 'local' ]; then
    touch /tmp/rc-local
    SSHD_RC_CONF_FILE=/etc/rc.conf.local
    SENDMAIL_RC_CONF_FILE=/etc/rc.conf.local
elif [ "$RC_CONF_FILE" = 'vendor' ]; then
    touch /tmp/rc-vendor
    SSHD_RC_CONF_FILE=/etc/defaults/vendor.conf
    SENDMAIL_RC_CONF_FILE=/etc/defaults/vendor.conf
elif [ "$RC_CONF_FILE" = 'name' ]; then
    touch /tmp/rc-name
    SSHD_RC_CONF_FILE=/etc/rc.conf.d/sshd
    SENDMAIL_RC_CONF_FILE=/etc/rc.conf.d/sendmail
else
    SSHD_RC_CONF_FILE=/etc/rc.conf
    SENDMAIL_RC_CONF_FILE=/etc/rc.conf
fi

ASSUME_ALWAYS_YES=yes FETCH_RETRY=5 pkg install sed
ASSUME_ALWAYS_YES=yes FETCH_RETRY=5 pkg install curl
ASSUME_ALWAYS_YES=yes FETCH_RETRY=5 pkg install sudo
ASSUME_ALWAYS_YES=yes FETCH_RETRY=5 pkg install bash

# mount ESP, copy loader
mount_msdosfs /dev/da0p1 /mnt
mkdir -p /mnt/EFI/BOOT
cp /boot/loader.efi /mnt/EFI/BOOT/
cp /boot/loader.efi /mnt/EFI/BOOT/BOOTX64.efi
umount /mnt/mnt

# /mnt/mnt is not a typo. ESP is mounted in chroot on
# /mnt of the new system, which makes it /mnt/mnt outside
# of chroot.

# Create UEFI boot variable
#efibootmgr -a -c -l da0p1:/efi/boot/loader.efi -L FreeBSD

######

# Disable X11
echo 'OPTIONS_UNSET+=X11' >> /etc/make.conf

# Basic network options
sysrc hostname=localhost

# Use DHCP to get the network configuration
sysrc ifconfig_DEFAULT=SYNCDHCP

# Enable sshd by default
sysrc -f "$SSHD_RC_CONF_FILE" sshd_enable=YES
# Disable DNS lookups by default to make SSH connect quickly
sed -i '' -e 's/^#UseDNS yes/UseDNS no/' /etc/ssh/sshd_config
# Allow root logins during build.  Deactivated upon cleanup
sed -i '' -e 's/^#PermitRootLogin no/PermitRootLogin yes/' /etc/ssh/sshd_config

# Disable sendmail
sysrc -f "$SENDMAIL_RC_CONF_FILE" sendmail_enable=NONE

# Change root's password to vagrant
echo 'vagrant' | pw usermod root -h 0

# Reboot quickly, don't wait at the panic screen
{
    echo 'debug.trace_on_panic=1'
    echo 'debug.debugger_on_panic=0'
    echo 'kern.panic_reboot_wait_time=0'
} >> /etc/sysctl.conf

# The console is not interactive, so we might as well boot quickly
sysrc -f /boot/loader.conf autoboot_delay=-1

# Reboot
shutdown -r now
